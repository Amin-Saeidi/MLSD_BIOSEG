name: Action Test Demo
run-name: Action Test
on: [push]
jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest  # You can change the runner platform if needed

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # This action checks out your code repository

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x  # Set the desired Python version

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./test/requirements.txt  # If you have a requirements file

      - name: Run Tests
        run: |
          cd ./test
          python test.py  # Run your test script
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run script
        run: |
          docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
          docker build -t "$IMAGE:${GITHUB_SHA:0:7}" ./mlflow
          docker images "$IMAGE:${GITHUB_SHA:0:7}"
          docker push "$IMAGE:${GITHUB_SHA:0:7}"
        env:
          REGISTRY: ${{ vars.REGISTRY }}
          REGISTRY_PASSWORD: ${{ vars.REGISTRY_PASSWORD }}
          REGISTRY_USER: ${{ vars.REGISTRY_USER }}
          APP_NAME: ${{ vars.APP_NAME }}
          IMAGE: ${{ vars.REGISTRY }}/${{ vars.APP_NAME }}  
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run script
        run: |
          docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASSWORD
          docker build -t "$IMAGE:${GITHUB_SHA:0:7}" ./application
          docker images "$IMAGE:${GITHUB_SHA:0:7}"
          docker push "$IMAGE:${GITHUB_SHA:0:7}" 
        env:
          REGISTRY: ${{ vars.REGISTRY }}
          REGISTRY_PASSWORD: ${{ vars.REGISTRY_PASSWORD }}
          REGISTRY_USER: ${{ vars.REGISTRY_USER }}
          APP_NAME: ${{ vars.APP_NAME_1}}
          IMAGE: ${{ vars.REGISTRY }}/${{ vars.APP_NAME_1}}
